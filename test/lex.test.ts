import { expect, test } from "bun:test";
import { tokenize } from "../src/lexer";

test("lex", () => {
	const sample = `
    create table public.task
  (
      id                      uuid       default uuid_generate_v4() not null primary key,
      status                  text,
      completed_by_id         integer    references public.users,
      completed_at            timestamp  default now() not null,
      qa_id                   integer    references public.users,
      qa_completed_at         timestamp,
      qa_status               text       default 'qa pending',
      document_effective_date date,
      document_expiry_date    date,
      document_expired        boolean,
      task_id                 uuid       not null,
      workflow_id             uuid       references public.workflow,
      document_id             uuid       references public.document,
      target_id               bigint     not null
  );
    `;

	const result = tokenize(sample);

	expect(result).toEqual([
		"create",
		"table",
		"public",
		".",
		"task",
		"(",
		"id",
		"uuid",
		"default",
		"uuid_generate_v4",
		"(",
		")",
		"not",
		"null",
		"primary",
		"key",
		",",
		"status",
		"text",
		",",
		"completed_by_id",
		"integer",
		"references",
		"public",
		".",
		"users",
		",",
		"completed_at",
		"timestamp",
		"default",
		"now",
		"(",
		")",
		"not",
		"null",
		",",
		"qa_id",
		"integer",
		"references",
		"public",
		".",
		"users",
		",",
		"qa_completed_at",
		"timestamp",
		",",
		"qa_status",
		"text",
		"default",
		"'",
		"qa",
		"pending",
		"'",
		",",
		"document_effective_date",
		"date",
		",",
		"document_expiry_date",
		"date",
		",",
		"document_expired",
		"boolean",
		",",
		"task_id",
		"uuid",
		"not",
		"null",
		",",
		"workflow_id",
		"uuid",
		"references",
		"public",
		".",
		"workflow",
		",",
		"document_id",
		"uuid",
		"references",
		"public",
		".",
		"document",
		",",
		"target_id",
		"bigint",
		"not",
		"null",
		")",
		";",
	]);
});
